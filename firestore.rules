rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {

        allow read, write: if false;

        match /groupInvites/{inviteLink} {
            allow get, create, delete: if isSignedIn();
        }

        match /groups/{groupId} {
              allow read, update: if isSignedIn() && isMemberOfGroup(existingData());
              allow create: if isSignedIn();
              allow delete: if isSignedIn() && isAdminOfGroup(existingData()) && canDeleteGroup(existingData());

              match /stock/{stockId} {
                  allow read, create, update: if isSignedIn() && isMemberOfGroup(getGroup(groupId));
                  allow delete: if false;
              }

              match /transactions/{transactionId} {
                  allow read, create, update: if isSignedIn() && isMemberOfGroup(getGroup(groupId));
                  allow delete: if false;
              }

              function getGroup(groupId) {
                  return get(/databases/$(database)/documents/groups/$(groupId)).data;
              }

              function isMemberOfGroup(group) {
                  return request.auth.uid in group.members;
              }

              function isAdminOfGroup(group) {
                  return request.auth.uid in group.admins;
              }

              function canDeleteGroup(group) {
                  return group.totalIn == 0 && group.totalOut == 0;
              }
        }

        /// Functions ///
        function isSignedIn() {
            return request.auth != null;
        }

        function existingData() {
            return resource.data;
        }

        // function incomingData() {
        // 	return request.resource.data;
        // }
    }
}
